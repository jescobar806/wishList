var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
import { getJSRuntimeName } from "./getJSRuntimeName";
async function createSchemaHash(inlineSchema) {
  const schemaBuffer = Buffer.from(inlineSchema);
  const jsRuntimeName = getJSRuntimeName();
  if (jsRuntimeName === "node") {
    const crypto = eval(`require('crypto')`);
    const hash = crypto.createHash("sha256").update(schemaBuffer);
    return hash.digest("hex");
  } else if (jsRuntimeName === "browser") {
    const hash2 = await crypto.subtle.digest("SHA-256", schemaBuffer);
    return Buffer.from(hash2).toString("hex");
  }
  return "";
}
__name(createSchemaHash, "createSchemaHash");
export {
  createSchemaHash
};
